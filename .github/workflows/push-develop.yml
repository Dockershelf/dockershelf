name: Push (develop branch)

on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - docker-image-name: "dockershelf/debian:buster"
            docker-image-extra-tags: "dockershelf/debian:oldstable"
            debian-suite: "oldstable"
          - docker-image-name: "dockershelf/debian:bullseye"
            docker-image-extra-tags: "dockershelf/debian:stable"
            debian-suite: "stable"
          - docker-image-name: "dockershelf/debian:bookworm"
            docker-image-extra-tags: "dockershelf/debian:testing"
            debian-suite: "testing"
          - docker-image-name: "dockershelf/debian:sid"
            docker-image-extra-tags: "dockershelf/debian:unstable dockershelf/debian:latest"
            debian-suite: "unstable"
          - docker-image-name: "dockershelf/latex:basic"
            docker-image-extra-tags: "dockershelf/latex:latest"
          - docker-image-name: "dockershelf/latex:full"
          - docker-image-name: "dockershelf/python:2.7"
          - docker-image-name: "dockershelf/python:3.5"
          - docker-image-name: "dockershelf/python:3.6"
          - docker-image-name: "dockershelf/python:3.8"
          - docker-image-name: "dockershelf/python:3.9"
            docker-image-extra-tags: "dockershelf/python:3"
          - docker-image-name: "dockershelf/python:3.10"
            docker-image-extra-tags: "dockershelf/python:latest"
          - docker-image-name: "dockershelf/ruby:2.1"
          - docker-image-name: "dockershelf/ruby:2.3"
          - docker-image-name: "dockershelf/ruby:2.5"
          - docker-image-name: "dockershelf/ruby:2.7"
          - docker-image-name: "dockershelf/ruby:3.0"
            docker-image-extra-tags: "dockershelf/ruby:latest"
          - docker-image-name: "dockershelf/node:10"
          - docker-image-name: "dockershelf/node:12"
          - docker-image-name: "dockershelf/node:14"
          - docker-image-name: "dockershelf/node:15"
          - docker-image-name: "dockershelf/node:16"
            docker-image-extra-tags: "dockershelf/node:latest"
          - docker-image-name: "dockershelf/mongo:4.2"
          - docker-image-name: "dockershelf/mongo:4.4"
          - docker-image-name: "dockershelf/mongo:5.0"
            docker-image-extra-tags: "dockershelf/mongo:latest"
          - docker-image-name: "dockershelf/postgres:9.6"
          - docker-image-name: "dockershelf/postgres:10"
          - docker-image-name: "dockershelf/postgres:11"
          - docker-image-name: "dockershelf/postgres:12"
          - docker-image-name: "dockershelf/postgres:13"
          - docker-image-name: "dockershelf/postgres:14"
            docker-image-extra-tags: "dockershelf/postgres:latest"
          - docker-image-name: "dockershelf/odoo:11.0"
          - docker-image-name: "dockershelf/odoo:12.0"
          - docker-image-name: "dockershelf/odoo:13.0"
          - docker-image-name: "dockershelf/odoo:14.0"
            docker-image-extra-tags: "dockershelf/odoo:latest"
          - docker-image-name: "dockershelf/php:7.0"
          - docker-image-name: "dockershelf/php:7.2"
          - docker-image-name: "dockershelf/php:7.3"
          - docker-image-name: "dockershelf/php:7.4"
          - docker-image-name: "dockershelf/php:8.0"
            docker-image-extra-tags: "dockershelf/php:latest"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: develop
      - name: Installing dependencies
        run: |
          sudo apt-get install debootstrap
          sudo gem install docker-api serverspec
      - name: Building docker image
        env:
          DOCKER_IMAGE_NAME: ${{ matrix.docker-image-name }}
          DEBIAN_SUITE: ${{ matrix.debian-suite }}
        run: |
          DOCKER_IMAGE_TARGET="${DOCKER_IMAGE_NAME##dockershelf/}"
          sed -i -r 's|FROM\s*(.*?)|FROM \1-dev|g' "${DOCKER_IMAGE_TARGET/://}/Dockerfile"
          sed -i -r 's|FROM scratch-dev|FROM scratch|g' "${DOCKER_IMAGE_TARGET/://}/Dockerfile"
          bash build-image.sh "${DOCKER_IMAGE_NAME}" "${DEBIAN_SUITE}"
      - name: Testing docker image
        env:
          DOCKER_IMAGE_NAME: ${{ matrix.docker-image-name }}
          DOCKER_IMAGE_EXTRA_TAGS: ${{ matrix.docker-image-extra-tags }}
        run: |
          bash test-image.sh "${DOCKER_IMAGE_NAME}" "${DOCKER_IMAGE_EXTRA_TAGS}"
      - name: Pushing docker image
        env:
          DOCKER_IMAGE_NAME: ${{ matrix.docker-image-name }}
          DOCKER_IMAGE_EXTRA_TAGS: ${{ matrix.docker-image-extra-tags }}
          DH_USERNAME: ${{ secrets.DH_USERNAME }}
          DH_PASSWORD: ${{ secrets.DH_PASSWORD }}
        run: |
          docker tag ${DOCKER_IMAGE_NAME} ${DOCKER_IMAGE_NAME}-dev
          DOCKER_IMAGE_NAME="${DOCKER_IMAGE_NAME}-dev"
          bash push-image.sh ${DOCKER_IMAGE_NAME} ${DH_USERNAME} ${DH_PASSWORD}
          if [ -n "${DOCKER_IMAGE_EXTRA_TAGS}" ]; then
            for EXTRA_TAG in ${DOCKER_IMAGE_EXTRA_TAGS}; do
              EXTRA_TAG="${EXTRA_TAG}-dev"
              docker tag ${DOCKER_IMAGE_NAME} ${EXTRA_TAG}
              bash push-image.sh ${EXTRA_TAG} ${DH_USERNAME} ${DH_PASSWORD}
            done
          fi
